# This is a basic workflow to help you get started with Actions

name: ActionTut

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job runs on a Windows runner
  build-windows:
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Log the pre-build disk space
        run: Get-PSDrive -Name C

      - name: Step 2 - Checkout the main GitHub branch
        uses: actions/checkout@v4

      - name: Step 3 - Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Step 4 - Build your Jakarta web app with Maven
        run: echo "mvn -B package --file pom.xml"

      - name: Step 5 - Check Windows Execution Policy
        run: |
          echo "Here is the Windows Execution Policy:"
          Get-ExecutionPolicy

      - name: Step 6 - List Windows environment variables
        run: 'Get-ChildItem Env:'

  # This job runs on an Ubuntu runner
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Log the pre-build disk space
        run: df -h

      - name: Step 2 - Checkout the main GitHub branch
        uses: actions/checkout@v4

      - name: Step 3 - Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run the Maven verify phase
        run: echo "mvn --batch-mode --update-snapshots verify"

      - name: Step 4 - Build your Jakarta web app with Maven
        run: echo mvn -B package --file pom.xml

      - name: Step 5 - Build the native Android app
        run: |
          echo "Here is the ANDROID_SDK_ROOT"
          echo $ANDROID_SDK_ROOT

      - name: Step 6 - Run your Selenium test
        run: |
          echo "The SELENIUM_JAR_PATH"
          echo $SELENIUM_JAR_PATH

      - name: Step 7 - Log build tool versions
        run: |
          git --version
          mvn --version
          ant -version
          gradle --version

      - name: Step 8 - Log the post-build disk space
        run: df -h
